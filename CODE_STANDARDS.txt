Coding Standards:
The point of the coding standards is for all 4 of us to be able to code
consistently such that we do not confuse each other. Also organizing the
code will make it a lot easier to debug if we run into any issues or when
we are correcting values during testing.

- Try to implement new features on branches that are not master, fixes are exempt.
  This is important as code changes that are made straight to master cannot be properly reviewed.
- All tabs should be 4 spaces. Indents should be made with space characters.
- the curly brackets for functions should start on the same line as their
  parent function
- variable names should mean something. Avoid using single letters even
  for loops and other iterative structures. Exceptions will be made if
  performance decreases significantly in certain areas of code.
- add a empty line at the start of the function and the end
- comments should be roughly 60-120 characters in line length
- function comments will follow the general style of documentation
  as follows:
  /*
  * Name         : function
  *
  * Synopsis     : int function(int _VAL)   *
  * Arguments    : int  _VAL : Miscellaneous value 
  *
  * Description  : does miscellaneous things to the value given
  * 
  * Returns      : int
  */
  
- space argument variables as if writing a sentence. No spaces are required
  for parent brackets unless two brackets are beside each then a space is
  required. 
  For example: 
    function(argument1, argument2, funcarg(arg1, arg2)) {}//end function

-MORE WILL BE ADDED AS NEEDED
    
 /*
  * Synopsis     : void main()   *
  * Arguments    :
  *
  * Description  : Main function outputs "Helloworld" 10 times
  *                Include any preconditions or postconditions.
  *                Describe why and when anyone would want to 
  *                call this function.
  * 
  * Returns      :
  */
void main() {
    
    int repeatHello;
    
    
    for (repeatHello = 0; repeatHello < 10; repeatHello++) {
    
        if (flag == true) {
        
            Serial.println("Helloworld");
            
        }//end if
        
    }//end for
    
    return 0;
    
}//end main